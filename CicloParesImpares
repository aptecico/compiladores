; Enunciado: Crear un programa que lea 5 números del usuario,
; los almacene en un arreglo, y luego muestre en pantalla:
; 1. Todos los números impares
; 2. Todos los números pares
; 3. Todos los números ingresados

.model small
.stack 100h
.data
    arreglo db 5 dup(?)
    mensaje db 'Ingrese un numero (0-9): $'
    mensajeImpares db 'Numeros impares: $'
    mensajePares db 'Numeros pares: $'
    mensajeTodos db 'Todos los numeros: $'
    nuevaLinea db 13, 10, '$'

.code
main proc
    mov ax, @data
    mov ds, ax
    
    ; Leer 5 números del usuario
    mov cx, 5
    mov si, 0
    leerNumeros:
        mov ah, 9
        lea dx, mensaje
        int 21h
        
        mov ah, 1
        int 21h
        
        sub al, '0'  ; Convertir ASCII a número
        mov arreglo[si], al
        inc si
        
        mov ah, 9
        lea dx, nuevaLinea
        int 21h
        
        loop leerNumeros
    
    ; Mostrar números impares
    mov ah, 9
    lea dx, mensajeImpares
    int 21h
    
    mov cx, 5
    mov si, 0
    imprimirImpares:
        mov al, arreglo[si]
        test al, 1
        jz noImpar
        
        add al, '0'  ; Convertir número a ASCII
        mov dl, al
        mov ah, 2
        int 21h
        
        mov dl, ' '
        int 21h
        
    noImpar:
        inc si
        loop imprimirImpares
    
    ; Nueva línea
    mov ah, 9
    lea dx, nuevaLinea
    int 21h
    
    ; Mostrar números pares
    lea dx, mensajePares
    int 21h
    
    mov cx, 5
    mov si, 0
    imprimirPares:
        mov al, arreglo[si]
        test al, 1
        jnz noPar
        
        add al, '0'  ; Convertir número a ASCII
        mov dl, al
        mov ah, 2
        int 21h
        
        mov dl, ' '
        int 21h
        
    noPar:
        inc si
        loop imprimirPares
    
    ; Nueva línea
    mov ah, 9
    lea dx, nuevaLinea
    int 21h
    
    ; Mostrar todos los números
    lea dx, mensajeTodos
    int 21h
    
    mov cx, 5
    mov si, 0
    imprimirTodos:
        mov al, arreglo[si]
        add al, '0'  ; Convertir número a ASCII
        mov dl, al
        mov ah, 2
        int 21h
        
        mov dl, ' '
        int 21h
        
        inc si
        loop imprimirTodos
    
    ; Terminar programa
    mov ah, 4Ch
    int 21h
main endp
end main
